// tsconfig.json
{
    //? Not sure what exactly it is BUT webpack/laravel-mix does NOT
    //? like when files are named the same thing despite having different paths
    //? E.g. Model/Foo and API/Foo will compile incorrectly
    //? Naming convention therefore must be
    //? E.g. Model/FooModel and API/FooAPI
    //? or
    //? E.g. Model/Foo and API/FooAPI while being certain never too use Foo (case sensitive) anywhere else!
    "compilerOptions": {
        //! True compiling options
        //? 'ES5' aligns with Vue's browser support
        //? TS will be compiled to ES5
        "target": "es6", //! es6 will allow arrow functions so consider it!
        // "lib": [
        //     "esnext",
        //     "dom",
        //     "dom.iterable",
        //     "scripthost"
        // ], //? Being extra specific of what libraries target is bringing in
        // "baseUrl": ".",
        // "paths": {
        //     //? If TS sees 'from "@/someDir/someFile"', it'll bring './resources/js/someDir/someFile'
        //     //? Using baseUrl of course
        //     "@/*": [
        //         "resources/js/*"
        //     ] //? 1st '*' is a wildcard, 2nd is baseUrl/someDir/someFile (base + module)
        // },
        //? W/ webpack, this ensures tree shaking
        "module": "esnext", //? Module system (so imports work now!)
        "moduleResolution": "node",
        "esModuleInterop": true,
        "sourceMap": true,
        "importHelpers": true,
        "allowSyntheticDefaultImports": true,
        //! Type inference
        //? This enables stricter inference for data properties on 'this'
        "strict": true,
        //"types": ["webpack-env"], //? Pulls typings if already available somewhere
        "experimentalDecorators": true,
        "noUnusedLocals": true, //? Ensures unused imports have warning on them
        "noImplicitAny": true,
        "noImplicitReturns": true,
        "noImplicitThis": true,
        //! Javascript compatibility
        "allowJs": true, //? Allows cross-compatibility (useful if migrating to typescript slowly)
        "outDir": "public/js" //? If none specified TS compiler will try to overwrite files and VSCode's TS extension will complain
    },
    "include": [
        "resources/js/**/*"
        //"resources/js/**/*.vue"
    ], //? Search these dirs and compile what it can
    "exclude": [
        "node_modules",
        "vendor"
    ]
}
// tsconfig.json
{
  "compilerOptions": {
    "target": "ESNext",
    "lib": [ //? Enables newer features
      "esnext", //? Arrow funcs, Object.entries, '??' operator and more!
      "dom", //? The rest just cover bases for ES6
      "dom.iterable"
    ], //? Being extra specific of what libraries target is bringing in
    "baseUrl": "./",
    "paths": {
      //? If TS sees 'from "@/someDir/someFile"', it'll load in './resources/js/someDir/someFile' with baseURL in mind
      "@/*": [
        "resources/js/*"
      ]
    },
    "module": "ESNext", //? Module system (so imports work now!)
    "moduleResolution": "bundler", //? New resolution system that works better with Vite
    "isolatedModules": true,
    "resolveJsonModule": true, //? Grabs json files
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "importHelpers": true,
    "allowSyntheticDefaultImports": true,
    "sourceMap": true,
    //! Type inference
    "strict": true, //? Loads a specific set of "strict" rules
    "types": ["vite/client", "vitest/globals", "jquery", "fomantic-ui-css"],
    "experimentalDecorators": true,
    "noEmit": true,
    "noUnusedLocals": true, //? Ensures unused imports have warning on them
    "noImplicitAny": true,
    "noImplicitReturns": true,
    "noImplicitThis": true,
    "allowJs": true //? Allows cross-compatibility (useful if migrating to typescript slowly)
  },
  "include": [ //? Search these dirs and compile what it can
    "resources/js/**/*.ts",
    "resources/js/**/*.vue",
    "resources/js/**/*.d.ts"
  ],
  "exclude": [
    "node_modules",
    "vendor"
  ]
}
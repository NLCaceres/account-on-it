//* Goal here is to have classes to make responsive width and heights
//* Using width & height at 25, 50, 75, and 100 percent
//* Format is .dimension-percentile E.g. h-25 or w-75

$dimension-percentiles: (5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100); //* Percentiles

$dimensions: ('h':'height', 'w':'width', 'max-h': 'max-height', 'max-w': 'max-width', 'min-h': 'min-height', 'min-w': 'min-width'); //* Height and width

@each $dimension-class-name,
$dimension-attr in $dimensions {

  .#{$dimension-class-name} {

    @each $dimension-percentile in $dimension-percentiles {

      //? Sass does NOT really have type cast funcs, so below are some tricks to do so
      //? Auto cast num - string to form the suffix
      &-#{$dimension-percentile} {
        #{$dimension-attr}: $dimension-percentile * 1% !important; //? Multiply by 1(unit type) & $result = ($var * 1)unit-type e.g. (25 * 1)% = 25%
      }
    }
  }
}

.auto {
  &-width {
    width: auto !important;
  }
  &-height {
    height: auto !important;
  }
}

//! Positioning
.absolute {
  &-pos {
    position: absolute;
  }

  &-center {
    position: absolute;
    width: 100%;
    text-align: center;
    left: 0;
    margin: 0;
    // padding: 0; //* Doesn't seem to be necessary
  }
}

.relative {
  &-pos {
    position: relative;
  }
}

.overflow-x {
  overflow-x: scroll;
}

.sticky-el {
  position: -webkit-sticky;
  position: sticky !important;
  top: 0;
  z-index: 1;
}

.fixed {
  position: fixed !important;

  &-h-center {
    position: fixed !important;
    left: 0;
    right: 0;
    margin: 0 auto !important;

    &-above {
      position: fixed !important;
      left: 0;
      right: 0;
      margin: 0 auto !important;
      z-index: 1;
    }
  }
}

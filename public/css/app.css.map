{"version":3,"sources":["webpack:///app_colors.scss","webpack:///app.scss","webpack:///borders.scss","webpack:///utility.scss","webpack:///dimensions.scss","webpack:///flex.scss","webpack:///margins.scss","webpack:///paddings.scss","webpack:///typography.scss","webpack:///variables/typography.scss","webpack:///forms.scss"],"names":[],"mappings":"wHAuBA;EApBE;ACGF;;ADDE;EACE;ACIJ;;ADDE;EACE;ACIJ;;ADHI;EACE;ACMN;;ADHC;EACE;ACMH;;ADLG;EACE;ACQL;;ADEA;EAzBE;AC2BF;;ADzBE;EACE;AC4BJ;;ADzBE;EACE;AC4BJ;;AD3BI;EACE;AC8BN;;AD3BC;EACE;AC8BH;;AD7BG;EACE;ACgCL;;ADlBA;EA7BE;ACmDF;;ADjDE;EACE;ACoDJ;;ADjDE;EACE;ACoDJ;;ADnDI;EACE;ACsDN;;ADnDC;EACE;ACsDH;;ADrDG;EACE;ACwDL;;ADtCA;EAjCE;AC2EF;;ADzEE;EACE;AC4EJ;;ADzEE;EACE;AC4EJ;;AD3EI;EACE;AC8EN;;AD3EC;EACE;AC8EH;;AD7EG;EACE;ACgFL;;AD1DA;EArCE;ACmGF;;ADjGE;EACE;ACoGJ;;ADjGE;EACE;ACoGJ;;ADnGI;EACE;ACsGN;;ADnGC;EACE;ACsGH;;ADrGG;EACE;ACwGL;;AD9EA;EAzCE;AC2HF;;ADzHE;EACE;AC4HJ;;ADzHE;EACE;AC4HJ;;AD3HI;EACE;AC8HN;;AD3HC;EACE;AC8HH;;AD7HG;EACE;ACgIL;;ADlGA;EA7CE;ACmJF;;ADjJE;EACE;ACoJJ;;ADjJE;EACE;ACoJJ;;ADnJI;EACE;ACsJN;;ADnJC;EACE;ACsJH;;ADrJG;EACE;ACwJL;;ADtHA;EAjDE;AC2KF;;ADzKE;EACE;AC4KJ;;ADzKE;EACE;AC4KJ;;AD3KI;EACE;AC8KN;;AD3KC;EACE;AC8KH;;AD7KG;EACE;ACgLL;;AD1IA;EArDE;ACmMF;;ADjME;EACE;ACoMJ;;ADjME;EACE;ACoMJ;;ADnMI;EACE;ACsMN;;ADnMC;EACE;ACsMH;;ADrMG;EACE;ACwML;;AD9JA;EAzDE;AC2NF;;ADzNE;EACE;AC4NJ;;ADzNE;EACE;AC4NJ;;AD3NI;EACE;AC8NN;;AD3NC;EACE;AC8NH;;AD7NG;EACE;ACgOL;;ADlLA;EA7DE;ACmPF;;ADjPE;EACE;ACoPJ;;ADjPE;EACE;ACoPJ;;ADnPI;EACE;ACsPN;;ADnPC;EACE;ACsPH;;ADrPG;EACE;ACwPL;;ACzPQ;EAEQ;AD2PhB;;AC7PQ;EAMQ;AD2PhB;;ACjQQ;EAUQ;AD2PhB;;ACrQQ;EAcQ;AD2PhB;;ACnMA;EAEI;ADqMJ;;AEtPI;EAQI;AFkPR;;AE1PI;EAQI;AFsPR;;AE9PI;EAQI;AF0PR;;ACvPQ;EAoBQ;ADuOhB;;AEtQI;EAQI;AFkQR;;AE1QI;EAQI;AFsQR;;AE9QI;EAQI;AF0QR;;ACvQQ;EAoBQ;ADuPhB;;AEtRI;EAQI;AFkRR;;AE1RI;EAQI;AFsRR;;AE9RI;EAQI;AF0RR;;ACvRQ;EAoBQ;ADuQhB;;AEtSI;EAQI;AFkSR;;AE1SI;EAQI;AFsSR;;AE9SI;EAQI;AF0SR;;ACvSQ;EAoBQ;ADuRhB;;AEtTI;EAQI;AFkTR;;AE1TI;EAQI;AFsTR;;AE9TI;EAQI;AF0TR;;ACvTQ;EC/BF;EAAA;AF2VN;;AEvUI;EAQI;AFmUR;;AE3UI;EAQI;AFuUR;;AE/UI;EAQI;AF2UR;;AEnVI;EAQI;AF+UR;;AEvVI;EAQI;AFmVR;;AE3VI;EAQI;AFuVR;;ACpVQ;EC/BF;EAAA;AFwXN;;AEpWI;EAQI;AFgWR;;AExWI;EAQI;AFoWR;;AE5WI;EAQI;AFwWR;;AEhXI;EAQI;AF4WR;;AEpXI;EAQI;AFgXR;;AExXI;EAQI;AFoXR;;ACpUI;EAEI;ADsUR;;AEhYI;EAQI;AF4XR;;AEpYI;EAQI;AFgYR;;AC7XQ;EAoBQ;AD6WhB;;AE5YI;EAQI;AFwYR;;AEhZI;EAQI;AF4YR;;ACzYQ;EAoBQ;ADyXhB;;AExZI;EAQI;AFoZR;;AE5ZI;EAQI;AFwZR;;ACrZQ;EAoBQ;ADqYhB;;AEpaI;EAQI;AFgaR;;AExaI;EAQI;AFoaR;;ACjaQ;EAoBQ;ADiZhB;;AEhbI;EAQI;AF4aR;;AEpbI;EAQI;AFgbR;;AC7aQ;EC/BF;EAAA;AFidN;;AE7bI;EAQI;AFybR;;AEjcI;EAQI;AF6bR;;AErcI;EAQI;AFicR;;AEzcI;EAQI;AFqcR;;AClcQ;EC/BF;EAAA;AFseN;;AEldI;EAQI;AF8cR;;AEtdI;EAQI;AFkdR;;AE1dI;EAQI;AFsdR;;AE9dI;EAQI;AF0dR;;AGzfM;EACE;AH4fR;;AG7fM;EACE;AHggBR;;AGjgBM;EACE;AHogBR;;AGrgBM;EACE;AHwgBR;;AGzgBM;EACE;AH4gBR;;AG7gBM;EACE;AHghBR;;AGjhBM;EACE;AHohBR;;AGrhBM;EACE;AHwhBR;;AGzhBM;EACE;AH4hBR;;AG7hBM;EACE;AHgiBR;;AGjiBM;EACE;AHoiBR;;AGriBM;EACE;AHwiBR;;AGziBM;EACE;AH4iBR;;AG7iBM;EACE;AHgjBR;;AGjjBM;EACE;AHojBR;;AGrjBM;EACE;AHwjBR;;AGzjBM;EACE;AH4jBR;;AG7jBM;EACE;AHgkBR;;AGjkBM;EACE;AHokBR;;AGrkBM;EACE;AHwkBR;;AGzkBM;EACE;AH4kBR;;AG7kBM;EACE;AHglBR;;AGjlBM;EACE;AHolBR;;AGrlBM;EACE;AHwlBR;;AGzlBM;EACE;AH4lBR;;AG7lBM;EACE;AHgmBR;;AGjmBM;EACE;AHomBR;;AGrmBM;EACE;AHwmBR;;AGzmBM;EACE;AH4mBR;;AG7mBM;EACE;AHgnBR;;AGjnBM;EACE;AHonBR;;AGrnBM;EACE;AHwnBR;;AGznBM;EACE;AH4nBR;;AG7nBM;EACE;AHgoBR;;AGjoBM;EACE;AHooBR;;AGroBM;EACE;AHwoBR;;AGzoBM;EACE;AH4oBR;;AG7oBM;EACE;AHgpBR;;AGjpBM;EACE;AHopBR;;AGrpBM;EACE;AHwpBR;;AGzpBM;EACE;AH4pBR;;AG7pBM;EACE;AHgqBR;;AGjqBM;EACE;AHoqBR;;AGrqBM;EACE;AHwqBR;;AGzqBM;EACE;AH4qBR;;AG7qBM;EACE;AHgrBR;;AGjrBM;EACE;AHorBR;;AGrrBM;EACE;AHwrBR;;AGzrBM;EACE;AH4rBR;;AG7rBM;EACE;AHgsBR;;AGjsBM;EACE;AHosBR;;AGrsBM;EACE;AHwsBR;;AGzsBM;EACE;AH4sBR;;AG7sBM;EACE;AHgtBR;;AGjtBM;EACE;AHotBR;;AGrtBM;EACE;AHwtBR;;AGztBM;EACE;AH4tBR;;AG7tBM;EACE;AHguBR;;AGjuBM;EACE;AHouBR;;AGruBM;EACE;AHwuBR;;AGzuBM;EACE;AH4uBR;;AG7uBM;EACE;AHgvBR;;AGjvBM;EACE;AHovBR;;AGrvBM;EACE;AHwvBR;;AGzvBM;EACE;AH4vBR;;AG7vBM;EACE;AHgwBR;;AGjwBM;EACE;AHowBR;;AGrwBM;EACE;AHwwBR;;AGzwBM;EACE;AH4wBR;;AG7wBM;EACE;AHgxBR;;AGjxBM;EACE;AHoxBR;;AGrxBM;EACE;AHwxBR;;AGzxBM;EACE;AH4xBR;;AG7xBM;EACE;AHgyBR;;AGjyBM;EACE;AHoyBR;;AGryBM;EACE;AHwyBR;;AGzyBM;EACE;AH4yBR;;AG7yBM;EACE;AHgzBR;;AGjzBM;EACE;AHozBR;;AGrzBM;EACE;AHwzBR;;AGzzBM;EACE;AH4zBR;;AG7zBM;EACE;AHg0BR;;AGj0BM;EACE;AHo0BR;;AGr0BM;EACE;AHw0BR;;AGz0BM;EACE;AH40BR;;AG70BM;EACE;AHg1BR;;AGj1BM;EACE;AHo1BR;;AGr1BM;EACE;AHw1BR;;AGz1BM;EACE;AH41BR;;AG71BM;EACE;AHg2BR;;AGj2BM;EACE;AHo2BR;;AGr2BM;EACE;AHw2BR;;AGz2BM;EACE;AH42BR;;AG72BM;EACE;AHg3BR;;AGj3BM;EACE;AHo3BR;;AGr3BM;EACE;AHw3BR;;AGz3BM;EACE;AH43BR;;AG73BM;EACE;AHg4BR;;AGj4BM;EACE;AHo4BR;;AGr4BM;EACE;AHw4BR;;AGz4BM;EACE;AH44BR;;AG74BM;EACE;AHg5BR;;AGj5BM;EACE;AHo5BR;;AGr5BM;EACE;AHw5BR;;AGz5BM;EACE;AH45BR;;AG75BM;EACE;AHg6BR;;AGj6BM;EACE;AHo6BR;;AGr6BM;EACE;AHw6BR;;AGz6BM;EACE;AH46BR;;AG76BM;EACE;AHg7BR;;AGj7BM;EACE;AHo7BR;;AGr7BM;EACE;AHw7BR;;AGz7BM;EACE;AH47BR;;AG77BM;EACE;AHg8BR;;AGj8BM;EACE;AHo8BR;;AGr8BM;EACE;AHw8BR;;AGz8BM;EACE;AH48BR;;AG78BM;EACE;AHg9BR;;AGj9BM;EACE;AHo9BR;;AGr9BM;EACE;AHw9BR;;AGj9BE;EACE;AHo9BJ;;AGl9BE;EACE;AHq9BJ;;AG/8BE;EACE;AHk9BJ;;AG/8BE;EACE;EACA;EACA;EACA;EACA;AHk9BJ;;AG58BE;EACE;AH+8BJ;;AG38BA;EACE;AH88BF;;AG38BA;EAEE;EACA;EACA;AH88BF;;AG38BA;EACE;AH88BF;;AG58BE;EACE;EACA;EACA;EACA;AH+8BJ;;AG78BI;EACE;EACA;EACA;EACA;EACA;AHg9BN;;AIhiCA;EACI;AJmiCJ;;AI/hCI;EACI;EACA;AJkiCR;;AIjiCQ;EACI;EACA;EACA;AJoiCZ;;AIliCQ;EACI;EACA;AJqiCZ;;AIliCI;EACI;EACA;AJqiCR;;AIniCI;EACI;EACA;AJsiCR;;AIniCI;EACI;EACA;AJsiCR;;AIniCI;EACI;EACA;AJsiCR;;AIniCI;EACI;EACA;AJsiCR;;AIniCI;EACI;EACA;EACA;AJsiCR;;AIliCI;EACI;EACA;AJqiCR;;AIniCQ;EACI;EACA;EACA;AJsiCZ;;AIniCQ;EACI;EACA;EACA;AJsiCZ;;AIpiCQ;EACI;EACA;AJuiCZ;;AIriCQ;EACI;EACA;EACA;AJwiCZ;;AItiCQ;EACI;EACA;EACA;AJyiCZ;;AIviCQ;EACI;EACA;EACA;AJ0iCZ;;AIriCI;EACI;AJwiCR;;AIriCI;EACI;AJwiCR;;AItiCQ;EACI;AJyiCZ;;AIniCI;EACI;AJsiCR;;AIpiCI;EACI;AJuiCR;;AIriCI;EACI;AJwiCR;;AIpiCA;EACI;AJuiCJ;;AIpiCA;EACI;AJuiCJ;;AIpiCA;EACI;AJuiCJ;;AIpiCA;EACI;AJuiCJ;;AIliCQ;EACI;AJqiCZ;;AItiCQ;EACI;AJyiCZ;;AI1iCQ;EACI;AJ6iCZ;;AI9iCQ;EACI;AJijCZ;;AIljCQ;EACI;AJqjCZ;;AItjCQ;EACI;AJyjCZ;;AI1jCQ;EACI;AJ6jCZ;;AI9jCQ;EACI;AJikCZ;;AIlkCQ;EACI;AJqkCZ;;AItkCQ;EACI;AJykCZ;;AI1kCQ;EACI;AJ6kCZ;;AKzrCE;EHJI;EAAA;EAAA;EAAA;AFosCN;;AKtrCM;EAQI;ALkrCV;;AK1rCM;EAQI;ALsrCV;;AK9rCM;EAQI;AL0rCV;;AKlsCM;EAQI;AL8rCV;;AKtsCM;EHdA;EAAA;AFytCN;;AK3sCM;EHdA;EAAA;AF8tCN;;AKnsCE;EH3BI;EAAA;EAAA;EAAA;AFquCN;;AKhsCM;EAQI;AL4rCV;;AKpsCM;EAQI;ALgsCV;;AKxsCM;EAQI;ALosCV;;AK5sCM;EAQI;ALwsCV;;AKhtCM;EHrCA;EAAA;AF0vCN;;AKrtCM;EHrCA;EAAA;AF+vCN;;AK3vCE;EHJI;EAAA;EAAA;EAAA;AFswCN;;AKxvCM;EAQI;ALovCV;;AK5vCM;EAQI;ALwvCV;;AKhwCM;EAQI;AL4vCV;;AKpwCM;EAQI;ALgwCV;;AKxwCM;EHdA;EAAA;AF2xCN;;AK7wCM;EHdA;EAAA;AFgyCN;;AKrwCE;EH3BI;EAAA;EAAA;EAAA;AFuyCN;;AKlwCM;EAQI;AL8vCV;;AKtwCM;EAQI;ALkwCV;;AK1wCM;EAQI;ALswCV;;AK9wCM;EAQI;AL0wCV;;AKlxCM;EHrCA;EAAA;AF4zCN;;AKvxCM;EHrCA;EAAA;AFi0CN;;AK7zCE;EHJI;EAAA;EAAA;EAAA;AFw0CN;;AK1zCM;EAQI;ALszCV;;AK9zCM;EAQI;AL0zCV;;AKl0CM;EAQI;AL8zCV;;AKt0CM;EAQI;ALk0CV;;AK10CM;EHdA;EAAA;AF61CN;;AK/0CM;EHdA;EAAA;AFk2CN;;AKv0CE;EH3BI;EAAA;EAAA;EAAA;AFy2CN;;AKp0CM;EAQI;ALg0CV;;AKx0CM;EAQI;ALo0CV;;AK50CM;EAQI;ALw0CV;;AKh1CM;EAQI;AL40CV;;AKp1CM;EHrCA;EAAA;AF83CN;;AKz1CM;EHrCA;EAAA;AFm4CN;;AK/3CE;EHJI;EAAA;EAAA;EAAA;AF04CN;;AK53CM;EAQI;ALw3CV;;AKh4CM;EAQI;AL43CV;;AKp4CM;EAQI;ALg4CV;;AKx4CM;EAQI;ALo4CV;;AK54CM;EHdA;EAAA;AF+5CN;;AKj5CM;EHdA;EAAA;AFo6CN;;AKz4CE;EH3BI;EAAA;EAAA;EAAA;AF26CN;;AKt4CM;EAQI;ALk4CV;;AK14CM;EAQI;ALs4CV;;AK94CM;EAQI;AL04CV;;AKl5CM;EAQI;AL84CV;;AKt5CM;EHrCA;EAAA;AFg8CN;;AK35CM;EHrCA;EAAA;AFq8CN;;AKj8CE;EHJI;EAAA;EAAA;EAAA;AF48CN;;AK97CM;EAQI;AL07CV;;AKl8CM;EAQI;AL87CV;;AKt8CM;EAQI;ALk8CV;;AK18CM;EAQI;ALs8CV;;AK98CM;EHdA;EAAA;AFi+CN;;AKn9CM;EHdA;EAAA;AFs+CN;;AK38CE;EH3BI;EAAA;EAAA;EAAA;AF6+CN;;AKx8CM;EAQI;ALo8CV;;AK58CM;EAQI;ALw8CV;;AKh9CM;EAQI;AL48CV;;AKp9CM;EAQI;ALg9CV;;AKx9CM;EHrCA;EAAA;AFkgDN;;AK79CM;EHrCA;EAAA;AFugDN;;AKngDE;EHJI;EAAA;EAAA;EAAA;AF8gDN;;AKhgDM;EAQI;AL4/CV;;AKpgDM;EAQI;ALggDV;;AKxgDM;EAQI;ALogDV;;AK5gDM;EAQI;ALwgDV;;AKhhDM;EHdA;EAAA;AFmiDN;;AKrhDM;EHdA;EAAA;AFwiDN;;AK7gDE;EH3BI;EAAA;EAAA;EAAA;AF+iDN;;AK1gDM;EAQI;ALsgDV;;AK9gDM;EAQI;AL0gDV;;AKlhDM;EAQI;AL8gDV;;AKthDM;EAQI;ALkhDV;;AK1hDM;EHrCA;EAAA;AFokDN;;AK/hDM;EHrCA;EAAA;AFykDN;;AKrkDE;EHJI;EAAA;EAAA;EAAA;AFglDN;;AKlkDM;EAQI;AL8jDV;;AKtkDM;EAQI;ALkkDV;;AK1kDM;EAQI;ALskDV;;AK9kDM;EAQI;AL0kDV;;AKllDM;EHdA;EAAA;AFqmDN;;AKvlDM;EHdA;EAAA;AF0mDN;;AK/kDE;EH3BI;EAAA;EAAA;EAAA;AFinDN;;AK5kDM;EAQI;ALwkDV;;AKhlDM;EAQI;AL4kDV;;AKplDM;EAQI;ALglDV;;AKxlDM;EAQI;ALolDV;;AK5lDM;EHrCA;EAAA;AFsoDN;;AKjmDM;EHrCA;EAAA;AF2oDN;;AMxoDE;EJHI;EAAA;EAAA;EAAA;AFkpDN;;AMtoDM;EAUI;ANgoDV;;AM1oDM;EAUI;ANooDV;;AM9oDM;EAUI;ANwoDV;;AMlpDM;EAUI;AN4oDV;;AMtpDM;EJZA;EAAA;AFuqDN;;AM3pDM;EJZA;EAAA;AF4qDN;;AMzqDE;EJHI;EAAA;EAAA;EAAA;AFmrDN;;AMvqDM;EAUI;ANiqDV;;AM3qDM;EAUI;ANqqDV;;AM/qDM;EAUI;ANyqDV;;AMnrDM;EAUI;AN6qDV;;AMvrDM;EJZA;EAAA;AFwsDN;;AM5rDM;EJZA;EAAA;AF6sDN;;AM1sDE;EJHI;EAAA;EAAA;EAAA;AFotDN;;AMxsDM;EAUI;ANksDV;;AM5sDM;EAUI;ANssDV;;AMhtDM;EAUI;AN0sDV;;AMptDM;EAUI;AN8sDV;;AMxtDM;EJZA;EAAA;AFyuDN;;AM7tDM;EJZA;EAAA;AF8uDN;;AM3uDE;EJHI;EAAA;EAAA;EAAA;AFqvDN;;AMzuDM;EAUI;ANmuDV;;AM7uDM;EAUI;ANuuDV;;AMjvDM;EAUI;AN2uDV;;AMrvDM;EAUI;AN+uDV;;AMzvDM;EJZA;EAAA;AF0wDN;;AM9vDM;EJZA;EAAA;AF+wDN;;AM5wDE;EJHI;EAAA;EAAA;EAAA;AFsxDN;;AM1wDM;EAUI;ANowDV;;AM9wDM;EAUI;ANwwDV;;AMlxDM;EAUI;AN4wDV;;AMtxDM;EAUI;ANgxDV;;AM1xDM;EJZA;EAAA;AF2yDN;;AM/xDM;EJZA;EAAA;AFgzDN;;AM7yDE;EJHI;EAAA;EAAA;EAAA;AFuzDN;;AM3yDM;EAUI;ANqyDV;;AM/yDM;EAUI;ANyyDV;;AMnzDM;EAUI;AN6yDV;;AMvzDM;EAUI;ANizDV;;AM3zDM;EJZA;EAAA;AF40DN;;AMh0DM;EJZA;EAAA;AFi1DN;;AM90DE;EJHI;EAAA;EAAA;EAAA;AFw1DN;;AM50DM;EAUI;ANs0DV;;AMh1DM;EAUI;AN00DV;;AMp1DM;EAUI;AN80DV;;AMx1DM;EAUI;ANk1DV;;AM51DM;EJZA;EAAA;AF62DN;;AMj2DM;EJZA;EAAA;AFk3DN;;AOz3DE;EACE;AP43DJ;;AO73DE;EACE;APg4DJ;;AOj4DE;EACE;APo4DJ;;AOr4DE;EACE;APw4DJ;;AOz4DE;EACE;AP44DJ;;AO74DE;EACE;APg5DJ;;AOj5DE;EACE;APo5DJ;;AOh5DA;ECPE;AR25DF;;ASj6DA;EACE;EDKA;ARg6DF;;ASj6DA;EAEE;ATm6DF;;ASl6DE;EAHF;IAII;ETs6DF;AACF;;ASr6DE;EANF;IAOI;ETy6DF;AACF;;ASt6DA;EDVE;ECYA;ATy6DF;;AAj6DA;EACE;AAo6DF;;AAh6DA;EACI;EACA;AAm6DJ;;AAh6DA;;;EAGI;EACA;AAm6DJ;;AAh6DA;EACE;EACA;EACA;AAm6DF;;AAl6DE;EACE;AAq6DJ;;AAl6DA;EACE;AAq6DF;;AAl6DA;EACI;AAq6DJ;;AAl6DA;EACI;AAq6DJ;;AA/5DI;EACI;AAk6DR;;AA/5DI;EACI;AAk6DR;;AA/5DI;EACI;AAk6DR;;AA75DA;EACI;IACI;EAg6DN;AACF;;AA75DA;EACI;EACA;AAg6DJ;;AA95DI;EACI;AAi6DR;;AA35DA;;;;CAi6DC;;AA55DD;;;;CAk6DC;;AA15DD;;wEA85DwE;;AA35DxE;;6EA+5D6E;;AA55D7E;;;;;;;;;;;;;;;;;;;;;;;;;;;CAy7DC","file":"/css/app.css","sourcesContent":["@import \"variables/colors.scss\";\n\n@mixin set-colors($app-color) {\n  background-color: $app-color !important;\n\n  &-text {\n    color: $app-color !important;\n  }\n\n  &-dark {\n    background-color: darken($app-color, 5%) !important;\n    &-text {\n      color: darken($app-color, 5%) !important;\n    }\n  }\n &-light {\n   background-color: lighten($app-color, 5%) !important;\n   &-text {\n     color: lighten($app-color, 5%) !important;\n   }\n }\n}\n\n.transparent {\n  @include set-colors(transparent);\n}\n\n//! My personal color scheme\n.app-brand-blue {\n  @include set-colors($brand-blue);\n}\n\n.app-light-accent {\n  @include set-colors($light-accent);\n}\n\n.app-dark-accent {\n  @include set-colors($dark-accent);\n}\n\n.app-blue {\n  @include set-colors($blue);\n}\n\n.app-cyan {\n  @include set-colors($cyan);\n}\n\n.app-yellow {\n  @include set-colors($yellow);\n}\n\n.app-green {\n  @include set-colors($green);\n}\n\n.app-red {\n  @include set-colors($red);\n}\n\n.app-gray {\n  @include set-colors($gray);\n}\n\n.app-white {\n  @include set-colors($white);\n}\n\n//! Semantic/Fomantic UI Color options\n//? Just tack these onto class attr <element class=\"red\" /> and all set!\n//* red, orange, yellow, olive, green, teal,\n//* blue, violet, purple, pink, brown, black","// Bootstrap\n//@import \"~bootstrap/scss/bootstrap\";\n\n//! Variables\n@import \"variables/colors.scss\";\n@import \"variables/spacing.scss\";\n@import \"variables/typography.scss\";\n//? @use helps w/ scope but Laravel preloads Bootstrap so @import overrides it easily\n//? With tweaking, @use works as intended. (Delete Bootstrap npm, fix mix.js, and index.blade, etc.)\n//? BUT here @forward ensures 'Variables' can be used anywhere this stylesheet is '@import/@use'd\n\n//! Fonts\n//@import \"https://fonts.googleapis.com/css?family=Nunito\"; //? @import can grab actual urls. @use cannot\n\n//! Utilities\n@import \"app_colors.scss\";\n@import \"borders.scss\";\n@import \"dimensions.scss\";\n@import \"flex.scss\";\n@import \"margins.scss\";\n@import \"paddings.scss\";\n@import \"typography.scss\";\n\n//! Modules\n@import \"forms.scss\";\n\n//! App-Wide Stylings\n//* Ideally only very basic or very specific CSS rules declared here\n\nhtml {\n  overflow-x: hidden; //* Seems to prevent Recaptcha from oversizing Mobile\n}\n\n//* Example of a very basic one\nbody {\n    background-color: $cyan;\n    min-width: 280px !important; //* Helps the new smallest mobile device Galaxy Fold\n}\n\nh1,\nh2,\nh3 {\n    font-weight: bold;\n    color: #fff !important;\n}\n\na { //* Hyperlink consistency is ALWAYS best\n  color: #fff;\n  font-weight: bold;\n  text-decoration: underline;\n  &:hover {\n    color: $light-accent;\n  }\n}\ni { //* Prevents icons from getting parent stylings (like underlines)\n  text-decoration: none !important;\n}\n\n.ui.divider {\n    background: #ffffff50 !important;\n}\n\n.text-centered {\n    text-align: center;\n}\n\n//* The following two relate to the navbar links (this first one needs more specificity though)\n.only.row .item {\n    //? Removes thin translucent lines to replace with different types of borders\n    &:hover {\n        border-bottom: 1px solid white;\n    }\n\n    &::before {\n        background: none;\n    }\n\n    .right.menu .item::before {\n        background: none;\n    }\n}\n\n//* Example of a very specific case\n@media screen and (max-width: 991px) {\n    .router-link-active {\n        border-top: 1px solid white !important;\n    }\n}\n\n.router-link-active {\n    background-color: $cyan !important;\n    border-bottom: 1px solid white !important;\n\n    &:hover {\n        background-color: $light-accent !important;\n    }\n}\n\n//? CSS Conventions to consider\n//! BEM Convention */\n/* Example Modifier - Uses '--' to notate a modifier and what it does\n.table-body-row--orange {\n  background-color: orange;\n}\n*/\n/* Example Child Element - Uses '__' to notate a child element and it's base styling\n.table-body-row__table-data {\n  background-color: blue;\n}\n*/\n\n//! OOCSS may be better option despite complexity thanks to Sass */\n//* Reasoning */\n/* 1st rule - Separate structure from skin - DRY\n   Structure - less noticeable props - height, margins, border-radius \n   Skin - Immediately apparent props - color, font, shadows, gradients */\n/* 2nd rule - Separate content from container - Increase reusability by avoiding child selectors\n   Instead of table .list .list-header -> .list-header will do just fine! and can be repurposed outside of this specific table\n   Instead of #sidebar -> .sidebar works just as well and becomes reusable! */\n/* With these concepts in mind, leveraging SCSS makes OOCSS even more simple\n   1. Use '%' - 'placeholder selector' to create skins & structures you can @extend (Prevents risky @extend's that step on each other)\n   2. Use '&' to create suffixes within classes that help specify needs of particular html elem\n   Ex: \n%button {\n  min-width: 100px;\n  padding: 1em;\n  border-radius: 1em;\n}\n%twitter-bg {\n  background-color: #55acee;\n  color: #fff;\n}\n\n   Now you can choose to place @extend %button either in the '&' or applying it to all of .btn!\n.btn {\n  &--twitter {\n    @extend %button;\n    @extend %twitter-background;\n  }\n}\n.btn {\n  @extend %button;\n  &--twitter {\n    @extend %twitter-background;\n  }\n}\n*/\n","@import 'utility.scss';\n//* Goal is to form various colors and styles of borderings\n//* Format: .border-side-color E.g. border-r-light or border-y-white\n//* .rounded-side vs border-side-color\n\n$rounded-sides: ('l', 'r', 'x', 'none');\n\n$border-sides: ('t':'border-top',\n    'r':'border-right',\n    'l':'border-left',\n    'b':'border-bottom',\n    'x':('border-left', 'border-right'),\n    'y':('border-top', 'border-bottom'));\n$border-slim: 2px; //* Describes the thickness (thin is 1px, medium is 3px)\n\n.rounded {\n    @each $side in $rounded-sides {\n        &-#{$side} {\n            @if $side==\"l\" {\n                border-radius: 5px 0px 0px 5px !important;\n            }\n\n            @else if $side=='r' {\n                border-radius: 0px 5px 5px 0px !important;\n            }\n\n            @else if $side=='x' {\n                border-radius: 5px !important;\n            }\n\n            @else {\n                border-radius: initial !important;\n            }\n        }\n    }\n\n}\n\n@mixin border-side-color-combos($color-variations, $color-var-vals, $standard-val) {\n\n    $color-vars: (); //* Arr & maps immutable \n\n    @each $color-var in $color-variations {\n        //* To combat immutability, just make a new map with old's value each loop\n        $color-vars: map-merge($color-vars, ($color-var : border)); //* Uses border shorthand later\n    }\n\n    @include set-suffixes($color-var-vals, $color-vars);\n\n    @each $side,\n    $attr in $border-sides {\n        &-#{$side} {\n\n\n            @if $side=='x'or $side=='y' {\n                @include set-sides($standard-val, $attr);\n\n                //* Set up suffixes for alternative values for EACH side \n                @each $attribute in $attr {\n                    $color-vars: ();\n\n                    @each $color-var in $color-variations {\n                        $color-vars: map-merge($color-vars, ($color-var : $attribute));\n                    }\n\n                    @include set-suffixes($color-var-vals, $color-vars);\n                }\n            }\n\n            @else {\n                //* Standard value for side\n                #{$attr}: $standard-val !important;\n\n                //* Set up suffixes for alternative values for side\n                $color-vars: (); //* Arr & maps immutable \n\n                @each $color-var in $color-variations {\n                    //* To combat immutability, just make a new map with old's value each loop\n                    $color-vars: map-merge($color-vars, ($color-var : $attr));\n                }\n\n                @include set-suffixes($color-var-vals, $color-vars);\n            }\n        }\n    }\n}\n\n.border {\n    $standard-val: thin solid black; //* '!important' already included in mixin used later\n    border: $standard-val !important;\n\n    $normal-color-vars: ('light', 'white', 'none');\n    $normal-color-variation-vals: (thin solid #ffffff55, thin solid white, none);\n\n    @include border-side-color-combos($normal-color-vars, $normal-color-variation-vals, $standard-val);\n\n    &-slim {\n        $slim-val: $border-slim solid black; //* Set up the standard for this suffix version\n        border: $slim-val; //* Use it \n\n        $slim-color-vars: ('light', 'white');\n        $slim-color-variation-vals: ($border-slim solid #ffffff55, $border-slim solid white, none);\n\n        @include border-side-color-combos($slim-color-vars, $slim-color-variation-vals, $slim-val);\n    }\n}","//* Attempt to make this as reusable as possible\n//* A fair # of css attrs revolve around 4 points, border, radius, margin, padding etc.\n//* Goal: Give which side (effectively attr) and val, return css all set\n\n//! The following 2 may receive update to handle an arr of vals but may be ridiculously tough to account for\n\n//! 4 Corners Attribute Setting Mixin\n@mixin set-sides($val, $sides, $sign: 1) {\n  @if length($sides)>4 {\n    @error \"Unknown additional attribute. Must contain at most 4 attributes related to each possible side\";\n  }\n\n  @if length($sides)==0 {\n    @error \"Missing which sides will be set\";\n  }\n\n  @each $side in $sides {\n    @if (type-of($val) == \"number\") {\n      #{$side}: $sign * $val !important;\n    } @else {\n      #{$side}: $val !important;\n    }\n  }\n}\n\n//! Suffix Addition Mixin\n@mixin set-suffixes($vals, $suffixesWithAttr) {\n  //* Suffixes with Attr should be a map ($suffix : $attr)\n  //* Optionally attr can contain arr ($suffix : ($attr1, $attr2, $attr3))\n  $suffixes: map-keys($map: $suffixesWithAttr);\n  $suffix-length: length($suffixes);\n\n  @if $suffix-length==0 {\n    @error 'Missing suffixes';\n  }\n\n  //? Sass does NOT start arrs from 0!\n  @for $i from 1 through $suffix-length {\n    $suffix: nth($list: $suffixes, $n: $i);\n\n    &-#{$suffix} {\n      $attributes: map-get($map: $suffixesWithAttr, $key: $suffix);\n\n      //? 'through' includes last value, 'until' does NOT\n      @for $j from 1 through length($attributes) {\n        $attr: nth($list: $attributes, $n: $j);\n        //* $val MUST use $i because it relates to suffix, NOT the attr (attr changes, suffix and it's val do NOT)\n        $val: nth($list: $vals, $n: $i);\n        #{$attr}: $val !important;\n      }\n    }\n  }\n}","//* Goal here is to have classes to make responsive width and heights\n//* Using width & height at 25, 50, 75, and 100 percent\n//* Format is .dimension-percentile E.g. h-25 or w-75\n\n$dimension-percentiles: (5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100); //* Percentiles\n\n$dimensions: ('h':'height', 'w':'width', 'max-h': 'max-height', 'max-w': 'max-width', 'min-h': 'min-height', 'min-w': 'min-width'); //* Height and width\n\n@each $dimension-class-name,\n$dimension-attr in $dimensions {\n\n  .#{$dimension-class-name} {\n\n    @each $dimension-percentile in $dimension-percentiles {\n\n      //? Sass does NOT really have type cast funcs, so below are some tricks to do so\n      //? Auto cast num - string to form the suffix\n      &-#{$dimension-percentile} {\n        #{$dimension-attr}: $dimension-percentile * 1% !important; //? Multiply by 1(unit type) & $result = ($var * 1)unit-type e.g. (25 * 1)% = 25%\n      }\n    }\n  }\n}\n\n.auto {\n  &-width {\n    width: auto !important;\n  }\n  &-height {\n    height: auto !important;\n  }\n}\n\n//! Positioning\n.absolute {\n  &-pos {\n    position: absolute;\n  }\n\n  &-center {\n    position: absolute;\n    width: 100%;\n    text-align: center;\n    left: 0;\n    margin: 0;\n    // padding: 0; //* Doesn't seem to be necessary\n  }\n}\n\n.relative {\n  &-pos {\n    position: relative;\n  }\n}\n\n.overflow-x {\n  overflow-x: scroll;\n}\n\n.sticky-el {\n  position: -webkit-sticky;\n  position: sticky !important;\n  top: 0;\n  z-index: 1;\n}\n\n.fixed {\n  position: fixed !important;\n\n  &-h-center {\n    position: fixed !important;\n    left: 0;\n    right: 0;\n    margin: 0 auto !important;\n\n    &-above {\n      position: fixed !important;\n      left: 0;\n      right: 0;\n      margin: 0 auto !important;\n      z-index: 1;\n    }\n  }\n}\n",".flexed {\n    display: flex;\n\n    //! Flex Row \n\n    &-center {\n        display:flex;\n        justify-content: center;\n        &-all {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n        &-cross {\n            display:flex;\n            align-items: center;\n        }\n    }\n    &-spaced-around {\n        display: flex;\n        justify-content: space-around;\n    }\n    &-spaced-between {\n        display: flex;\n        justify-content: space-between;\n    }\n\n    &-align-baselines {\n        display:flex;\n        align-items: baseline;\n    }\n\n    &-align-stretch {\n        display: flex;\n        align-items: stretch;\n    }\n\n    &-wrap {\n        display: flex;\n        flex-wrap: wrap;\n    }\n\n    &-reverse {\n        display: flex;\n        flex-direction: row-reverse;\n        align-items: flex-start;\n    }\n\n    //! Flex Column Direction\n    &-column {\n        display: flex;\n        flex-direction: column;\n\n        &-wrap {\n            display: flex;\n            flex-direction: column;\n            flex-wrap: wrap;\n        }\n\n        &-center {\n            display:flex;\n            flex-direction: column;\n            justify-content: center;\n        }\n        &-end {\n            display: flex;\n            justify-content: flex-end;\n        }\n        &-spaced-around {\n            display:flex;\n            flex-direction: column;\n            justify-content: space-around;\n        }\n        &-spaced-between {\n            display:flex;\n            flex-direction: column;\n            justify-content: space-between;\n        }  \n        &-reverse {\n            display: flex;\n            flex-direction: column-reverse;\n            align-items: flex-start;\n        }      \n    }\n\n    //! Flex Property\n    &-equal {\n        flex: 1 1 0; //* All grow and shrink at same rate as if they were the same width\n    }\n\n    &-auto {\n        flex: 1 1 auto;\n        \n        &-no-shrink {\n            flex: 1 0 auto;\n        }\n    }\n}\n\n.align-self {\n    &-start {\n        align-self: flex-start;\n    }\n    &-end {\n        align-self: flex-end;\n    }\n    &-center {\n        align-self: center;\n    }\n}\n\n.spaced-around {\n    justify-content: space-around;\n}\n\n.align-baselines {\n    align-items: baseline;\n}\n\n.i-flex {\n    display: inline-flex;\n}\n\n.hidden-el {\n    display: none;\n}\n\n.flex-stretch {\n    @for $i from 0 through 10 {\n        &-#{$i} {\n            flex-grow: $i !important;\n        }\n    }\n}","@import 'utility.scss';\n\n$margin-classes: (\"m-0\":$spacer-0,\n  'm-xs':$spacer-1,\n  'm-sm':$spacer-2,\n  'm-md':$spacer-3,\n  'm-lg':$spacer-4,\n  'm-xl':$spacer-5,\n  'm-xxl':$spacer-6); //* Each margin class gets spaced out the same amount\n\n$margin-suffixes: ('-t':'margin-top',\n  '-r':'margin-right',\n  '-l':'margin-left',\n  '-b':'margin-bottom',\n  '-x':('margin-left', 'margin-right'),\n  '-y':('margin-top', 'margin-bottom')); //* All get attribute val, except x & y that get 2 (arr must be pulled out by mixin)\n\n$margin-attrs: ('margin-top', 'margin-right', 'margin-bottom', 'margin-left');\n\n//* Takes each size of margin and sets the value \n@each $margin-class,\n$spacer in $margin-classes {\n  .#{$margin-class} {\n\n    //* Mixin that iterates and sets each side specified\n    @include set-sides($spacer, $margin-attrs);\n\n    //* Creates separate suffixed version to handle each side or combo of sides\n    @each $margin-suffix,\n    $attr in $margin-suffixes {\n\n\n      &#{$margin-suffix} {\n\n        //* Both x (l & r) and y (t & b) use mixin to pull out those 2 attributes\n        @if $margin-suffix=='-x'or $margin-suffix=='-y' {\n          @include set-sides($spacer, $attr);\n        }\n\n        @else {\n          #{$attr}: $spacer !important;\n        }\n      }\n    }\n  }\n  .nega-#{$margin-class} {\n\n    //* Mixin that iterates and sets each side specified\n    @include set-sides($spacer, $margin-attrs, -1);\n\n    //* Creates separate suffixed version to handle each side or combo of sides\n    @each $margin-suffix,\n    $attr in $margin-suffixes {\n\n\n      &#{$margin-suffix} {\n\n        //* Both x (l & r) and y (t & b) use mixin to pull out those 2 attributes\n        @if $margin-suffix=='-x'or $margin-suffix=='-y' {\n          @include set-sides($spacer, $attr, -1);\n        }\n\n        @else {\n          #{$attr}: (-1 * $spacer) !important;\n        }\n      }\n    }\n  }\n}","@import 'utility.scss';\n\n$padding-classes: (\"p-0\":$spacer-0,\n  'p-xs':$spacer-1,\n  'p-sm':$spacer-2,\n  'p-md':$spacer-3,\n  'p-lg':$spacer-4,\n  'p-xl':$spacer-5,\n  'p-xxl':$spacer-6); //? Each padding class gets spaced out the same amount\n\n$padding-suffixes: ('-t':'padding-top',\n  '-r':'padding-right',\n  '-l':'padding-left',\n  '-b':'padding-bottom',\n  '-x':('padding-left', 'padding-right'),\n  '-y':('padding-top', 'padding-bottom')); //?\n\n$padding-attrs: ('padding-top', 'padding-right', 'padding-bottom', 'padding-left');\n\n@each $padding-class,\n$spacer in $padding-classes {\n  .#{$padding-class} {\n\n    //? Mixin that iterates and sets each side specified\n    @include set-sides($spacer, $padding-attrs);\n\n    @each $padding-suffix,\n    $attr in $padding-suffixes {\n\n      //? Creates separate suffixed version to handle each side or combo of sides\n      &#{$padding-suffix} {\n        @if $padding-suffix=='-x' {\n          @include set-sides($spacer, $attr);\n        }\n\n        @else if $padding-suffix=='-y' {\n          @include set-sides($spacer, $attr);\n        }\n\n        @else {\n          #{$attr}: $spacer !important;\n        }\n      }\n    }\n  }\n}","$font-size-classes: (\"f-xxs\":$font-size-0,\n  'f-xs':$font-size-1,\n  'f-sm':$font-size-2,\n  'f-md':$font-size-3,\n  'f-lg':$font-size-4,\n  'f-xl':$font-size-5,\n  'f-xxl':$font-size-6);\n\n@each $font-size-class-name,\n$font-size in $font-size-classes {\n\n  .#{$font-size-class-name} {\n    font-size: $font-size !important;\n  }\n}\n\n.text-shadowed {\n  @include set-text-shadow(2px, black);\n}\n\n","@import \"https://fonts.googleapis.com/css?family=Nunito\"; //? @import can grab actual urls. @use cannot\n\n// Typography\n$font-size-base: 0.9rem;\n$line-height-base: 1.6;\n$font-family-sans-serif: \"Nunito\",\nsans-serif;\n\n@mixin set-text-shadow($size, $color) {\n  text-shadow: (-1*$size) $size 0 $color, $size $size 0 $color, $size (-1*$size) 0 $color, (-1*$size) (-1*$size) 0 $color;\n}\n\n//! Font Size\n//? It may be best to use vw instead of em since \n//? em typically refers to width based on font size \n//? Ultimately makes it kind of confusing to debug\n// $font-size-0: 0.5em;\n// $font-size-1: 0.75em;\n// $font-size-2: 1em;\n// $font-size-3: 1.5em;\n// $font-size-4: 2em;\n// $font-size-5: 3em;\n// $font-size-6: 4em;\n\n$font-size-0: 1vw;\n$font-size-1: 2vw;\n$font-size-2: 3vw;\n$font-size-3: 4vw;\n$font-size-4: 6vw;\n$font-size-5: 7vw;\n$font-size-6: 8vw;\n","@import 'variables/typography.scss';\n@import 'variables/colors.scss';\n\n%label-skin {\n  color: white !important;\n  @include set-text-shadow(2px, black);\n}\n\n.form-label {\n  @extend %label-skin;\n  margin-bottom: 0.5em !important;\n  @media screen and (min-width: 500px) {\n    font-size: larger !important;\n  }\n  @media screen and (max-width: 499px) {\n    font-size: medium !important;\n  }\n}\n\n.form-validation-err {\n  @include set-text-shadow(1px, black);\n  color: $red;\n}"],"sourceRoot":""}